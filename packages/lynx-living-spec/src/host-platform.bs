# <dfn for=HostPlatform>Host Platform</dfn> # {#LynxHostPlatform}

## <dfn for=HostPlatform>LynxView</dfn>

An entry to create a complete Lynx UI instance and public interfaces of Lynx

## <dfn for=HostPlatform>LynxUIRenderer</dfn>

An abstraction Interface of UI rendering backend, the concrete implementation includes the UI node painting, layout, event handling capabilities.

## <dfn for=HostPlatform>LynxTemplateRenderer</dfn>

Render and control Lynx Template:  Assemble [=CommonInfrastructure/Lynx pipeline=] to  form a complete template rendering capability and provide template rendering lifecycle.

## <dfn for=HostPlatform>Embedder</dfn>

A cross-platform C++ version of LynxTemplateRenderer that has the same responsibilities as LynxTemplateRenderer and is implemented on non-mobile devices.

## <dfn for=HostPlatform>LynxShell</dfn>

The core driver of the Lynx C++ base flow, responsible for assembling the various modules of the [=CommonInfrastructure/Lynx pipeline=], including a threading model and support for module injection.

## <dfn for=HostPlatform>Headless</dfn>

Lynx does not have a headless mode equivalent to Chrome. Chrome is an executable, it has a UI-less execution mode, Lynx is an SDK, it cannot be executed independently, so there is no headless mode.

